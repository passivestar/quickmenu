{
  "items": [
    { "path": "General/Separate or Join", "operator": "qm.join_separate" },
    { "path": "General/Shade Smooth or Flat", "operator": "qm.smooth" },
    { "path": "General/Hide or Unhide", "operator": "qm.local_view" },

    { "path": "General/[Separator]" },

    { "path": "General/Origin To Geometry", "operator": "qm.set_origin", "params": { "type": 0 } },
    { "path": "General/Origin To Bottom", "operator": "qm.set_origin", "params": { "type": 1 } },
    { "path": "General/Origin To Cursor", "operator": "object.origin_set", "params": { "type": 2, "center": 1 } },

    { "path": "General/[Separator]" },

    { "path": "General/(Q) Toggle Proportional Editing", "operator": "qm.proportional_editing" },
    { "path": "General/(W) Toggle Wireframe", "operator": "qm.wireframe" },
    { "path": "General/(E) Rotate 90", "operator": "qm.rotate", "params": { "angle": 1.5708 }, "icon": "CAMERA_DATA" },

    { "path": "General/[Separator]" },

    { "path": "General/(A) Mirror Transform", "operator": "transform.mirror" },
    { "path": "General/(D) Make Single User", "operator": "object.make_single_user", "params": { "type": 0, "object": true, "obdata": true } },
    { "path": "General/(F) Make Links", "operator": "object.make_links_data" },

    { "path": "General/[Separator]" },

    { "path": "General/(Z) Make Parent", "operator": "object.parent_set" },
    { "path": "General/(X) Toggle Correct Face Attributes", "operator": "qm.correct_attributes" },
    { "path": "General/(V) Clear Modifiers", "operator": "qm.clear_modifiers" },

    { "path": "Select/Select Ring Or Loop", "operator": "qm.select_ring" },
    { "path": "Select/Select More Or Less", "operator": "qm.select_more" },
    { "path": "Select/Select Region or Loop", "operator": "qm.region_to_loop" },
    {
      "path": "Select/Select View Parallel Edges", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Select View Parallel Edges" },
      "icon": "CAMERA_DATA"
    },
    {
      "path": "Select/Select View Perpendicular Faces", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Select View Perpendicular Faces" },
      "icon": "CAMERA_DATA"
    },
    {
      "path": "Select/Expand Selection", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Expand Selection" }
    },

    { "path": "Select/[Separator]" },

    { "path": "Select/(Q) Select Linked Flat", "operator": "mesh.faces_select_linked_flat" },
    { "path": "Select/(W) Select Loose", "operator": "mesh.select_loose" },

    { "path": "Select/[Separator]" },

    {
      "path": "Select/(A) Invert Selection Connected", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Invert Selection Connected" }
    },
    { "path": "Select/(D) Select Sharp Edges", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Select Sharp Edges" }
    },

    { "path": "Select/[Separator]" },
    {
      "path": "Select/(X) Noise Deselect", "operator": "geometry.execute_node_group",
      "params": {
        "name": "QM Noise Deselect"
      },
      "mode": "EDIT_MESH"
    },
    {
      "path": "Select/(X) Random",
      "operator": "object.select_random",
      "mode": "OBJECT"
    },
    { "path": "Select/(C) Checker Deselect", "operator": "mesh.select_nth" },

    {
      "path": "Generate/Solidify Edges", "operator": "geometry.execute_node_group",
      "params": {
        "name": "QM Solidify Edges"
      }
    },
    {
      "path": "Generate/Spin", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Spin" }
    },
    {
      "path": "Generate/Selection To Box", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Selection To Box" }
    },
    {
      "path": "Generate/Selection To Cylinder", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Selection To Cylinder" }
    },
    {
      "path": "Generate/Circles On Faces", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Circles on Faces" }
    },
    {
      "path": "Generate/Circular Array", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Circular Array" }
    },
    { "path": "Generate/[Separator]" },
    {
      "path": "Generate/(Q) Instantiate/Cluster", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Cluster" }
    },
    { "path": "Generate/(Q) Instantiate/[Separator]" },
    {
      "path": "Generate/(Q) Instantiate/Cubes On Edges", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Cubes On Edges" }
    },
    {
      "path": "Generate/(Q) Instantiate/Spheres On Edges", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Spheres On Edges" }
    },
    {
      "path": "Generate/(Q) Instantiate/Cylinders On Edges", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Cylinders On Edges" }
    },
    { "path": "Generate/(Q) Instantiate/[Separator]" },
    {
      "path": "Generate/(Q) Instantiate/Cubes On Surface", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Cubes On Surface" }
    },
    {
      "path": "Generate/(Q) Instantiate/Spheres On Surface", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Spheres On Surface" }
    },
    {
      "path": "Generate/(W) Connect Islands", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Connect Islands" }
    },
    {
      "path": "Generate/(E) Extrude Both Ways", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Extrude Both Ways" }
    },
    {
      "path": "Generate/(R) Panel", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Panel" }
    },
    {
      "path": "Generate/(Y) Cables", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Cables" }
    },
    {
      "path": "Generate/(U) Convex Hull", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Convex Hull" }
    },
    { "path": "Generate/[Separator]" },
    {
      "path": "Generate/(G) Edges To Ropes", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Edges To Ropes" }
    },
    { "path": "Generate/[Separator]"},
    {
      "path": "Generate/(D) Mirror", "operator": "qm.mirror",
      "params": {
        "axis": [ false, false, false ],
        "bisect_flip": [ false, false, false ]
      },
      "icon": "CAMERA_DATA"
    },
    { "path": "Generate/(F) Array", "operator": "qm.array", "icon": "CAMERA_DATA"},


    { "path": "Modify/Convert To Mesh", "operator": "qm.convert_to_mesh" },
    { "path": "Modify/Subdivision Surface", "operator": "qm.subsurf" },
    { "path": "Modify/Bevel", "operator": "qm.bevel" },
    {
      "path": "Modify/Voxel Remesh", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Voxel Remesh" }
    },
    { "path": "Modify/Triangulate", "operator": "qm.triangulate" },
    {
      "path": "Modify/Topology Expand Offset", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Topology Expand Offset" }
    },

    { "path": "Modify/[Separator]"},
    { "path": "Modify/(Q) Flip Normals", "operator": "mesh.flip_normals" },
    {
      "path": "Modify/(W) Vertices Smooth", "operator": "mesh.vertices_smooth",
      "params": { "factor": 1 }
    },
    {
      "path": "Modify/(R) Randomize", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Randomize" },
      "mode": "EDIT_MESH"
    },
    {
      "path": "Modify/(R) Randomize",
      "operator": "object.randomize_transform",
      "mode": "OBJECT"
    },
    { "path": "Modify/[Separator]"},
    {
      "path": "Modify/(A) Snap Rotation By Normal", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Snap Rotation By Face Normal" }
    },
    {
      "path": "Modify/(D) Shrinkwrap", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Shrinkwrap" }
    },
    {
      "path": "Modify/(F) Flatten", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Flatten" },
      "icon": "CAMERA_DATA"
    },
    {
      "path": "Modify/(G) Noise", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Noise" }
    },
    { "path": "Modify/[Separator]" },
    {
      "path": "Modify/(X) Damage/Holes", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Holes" }
    },
    {
      "path": "Modify/(X) Damage/Chunks", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Chunks" }
    },
    {
      "path": "Modify/(X) Damage/Cracks", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Cracks" }
    },

    { "path": "[Separator]"},

    { "path": "(Q) Delete and Split/Merge", "operator": "mesh.merge", "params": { "type": 1 } },
    { "path": "(Q) Delete and Split/Merge By Distance", "operator": "mesh.remove_doubles" },
    { "path": "(Q) Delete and Split/Limited Dissolve", "operator": "mesh.dissolve_limited" },
    { "path": "(Q) Delete and Split/Decimate", "operator": "mesh.decimate" },

    { "path": "(Q) Delete and Split/[Separator]" },

    {
      "path": "(Q) Delete and Split/(Q) Delete View Perpendicular", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Delete View Perpendicular" }
    },
    {
      "path": "(Q) Delete and Split/(E) Edge Split", "operator": "mesh.edge_split",
      "params": { "type": "EDGE" }
    },
    {
      "path": "(Q) Delete and Split/(R) Delete Unselected", "operator": "geometry.execute_node_group",
      "params": { "name": "QM Delete Unselected" }
    },

    { "path": "(Q) Delete and Split/[Separator]" },

    { "path": "(Q) Delete and Split/(S) Split", "operator": "mesh.split" },
    { "path": "(W) UV and Textures/Mark Seam", "operator": "qm.mark_seam", "params": { "clear": false } },
    { "path": "(W) UV and Textures/Clear Seam", "operator": "qm.mark_seam", "params": { "clear": true } },
    { "path": "(W) UV and Textures/Unwrap", "operator": "uv.unwrap" },
    { "path": "(W) UV and Textures/Straighten UVs", "operator": "qm.straighten_uvs" },
    { "path": "(W) UV and Textures/Cube Project", "operator": "uv.cube_project", "params": { "cube_size": 2.0 } },
    { "path": "(W) UV and Textures/View Project", "operator": "uv.project_from_view" },

    { "path": "(W) UV and Textures/[Separator]" },

    { "path": "(W) UV and Textures/(Q) Smart UV Project", "operator": "qm.smart_uv_project" },
    {
      "path": "(W) UV and Textures/(W) Transform UVs", "operator": "qm.transform_uvs",
      "params": {
        "offset_x": 0,
        "offset_y": 0,
        "rotation": 0,
        "scale_x": 1,
        "scale_y": 1
      }
    },
    {
      "path": "(W) UV and Textures/(E) Rotate UVs 90", "operator": "qm.transform_uvs",
      "params": {
        "offset_x": 0,
        "offset_y": 0,
        "rotation": 1.5708,
        "scale_x": 1,
        "scale_y": 1
      }
    },

    { "path": "(W) UV and Textures/[Separator]" },

    { "path": "(W) UV and Textures/(D) Set Vertex Color", "operator": "qm.set_vertex_color" },
    { "path": "(W) UV and Textures/(F) Select By Vertex Color", "operator": "qm.select_by_vertex_color" },
    { "path": "(E) Cut/Union", "operator": "qm.boolean", "params": { "operation": 1 } },
    { "path": "(E) Cut/Difference", "operator": "qm.boolean", "params": { "operation": 0 } },
    { "path": "(E) Cut/Intersect", "operator": "qm.boolean", "params": { "operation": 2 } },
    { "path": "(E) Cut/Cut", "operator": "geometry.execute_node_group", "params": { "name": "QM Cut" } },
    { "path": "(E) Cut/Inset Cut", "operator": "geometry.execute_node_group", "params": { "name": "QM Inset Cut" } },
    { "path": "(E) Cut/Panel Cut", "operator": "geometry.execute_node_group", "params": { "name": "QM Panel Cut" } },
    { "path": "(E) Cut/Groove Cut", "operator": "geometry.execute_node_group", "params": { "name": "QM Groove Cut" } },
    { "path": "(E) Cut/Pipe Cut", "operator": "geometry.execute_node_group", "params": { "name": "QM Pipe Cut" } },

    { "path": "(E) Cut/[Separator]" },

    { "path": "(E) Cut/(Q) Grid Slice", "operator": "geometry.execute_node_group", "params": { "name": "QM Grid Slice" } },
    { "path": "(E) Cut/(E) Knife Intersect", "operator": "geometry.execute_node_group", "params": { "name": "QM Knife Intersect" } },
    { "path": "(E) Cut/(R) Grid Cut", "operator": "geometry.execute_node_group", "params": { "name": "QM Grid Cut" } },
    { "path": "(E) Cut/(T) Plane Intersect", "operator": "qm.plane_intersect"},

    { "path": "(E) Cut/[Separator]" },

    { "path": "(E) Cut/(A) Hull Cut", "operator": "geometry.execute_node_group", "params": { "name": "QM Hull Cut" } },

    { "path": "(R) Animation/Parent To New Empty", "operator": "qm.parent_to_new_empty" },
    { "path": "(R) Animation/Add Constraint", "operator": "object.constraint_add_with_targets" },
    { "path": "(R) Animation/Add Bone To Selection", "operator": "qm.add_bone" },
    { "path": "(R) Animation/Add Collision", "operator": "qm.add_collision" },
    { "path": "(R) Animation/Add Cloth", "operator": "qm.add_cloth" },
    { "path": "(R) Animation/Animate Rotation", "operator": "qm.animate_rotation" },

    { "path": "(R) Animation/[Separator]" },

    { "path": "(R) Animation/(Q) Toggle Auto Keying", "operator": "qm.toggle_auto_keying" },
    { "path": "(R) Animation/[Separator]" },
    { "path": "(R) Animation/(Z) Clear Drivers", "operator": "qm.clear_drivers" },
    { "path": "(R) Animation/(X) Drivers Set Use Self", "operator": "qm.set_use_self_drivers" },

    { "path": "[Separator]" },

    { "path": "(A) Snapping/Bounding Box Pivot", "operator": "qm.transform_pivot", "params": { "type": "BOUNDING_BOX_CENTER" } },
    { "path": "(A) Snapping/Individual Pivot", "operator": "qm.transform_pivot", "params": { "type": "INDIVIDUAL_ORIGINS" } },
    { "path": "(A) Snapping/3D Cursor Pivot", "operator": "qm.transform_pivot", "params": { "type": "CURSOR" } },

    { "path": "(A) Snapping/[Separator]" },

    { "path": "(A) Snapping/Global Orientation", "operator": "qm.transform_orientation", "params": { "type": "GLOBAL" } },
    { "path": "(A) Snapping/Normal Orientation", "operator": "qm.transform_orientation", "params": { "type": "NORMAL" } },
    { "path": "(A) Snapping/New Orientation", "operator": "qm.transform_orientation", "params": { "type": "CREATE" } },

    { "path": "(A) Snapping/[Separator]" },

    { "path": "(A) Snapping/(V) Vertices", "operator": "qm.set_snap", "params": { "mode": "GENERAL", "type": "VERTEX" } },
    { "path": "(A) Snapping/(F) Faces", "operator": "qm.set_snap", "params": { "mode": "GENERAL", "type": "FACE" } },
    { "path": "(A) Snapping/(R) Grid", "operator": "qm.set_snap", "params": { "mode": "GENERAL", "type": "INCREMENT" } },

    { "path": "(A) Snapping/[Separator]" },

    { "path": "(A) Snapping/(C) Closest", "operator": "qm.set_snap", "params": { "mode": "TARGET", "type": "CLOSEST" } },
    { "path": "(A) Snapping/(E) Center", "operator": "qm.set_snap", "params": { "mode": "TARGET", "type": "CENTER" } },
    { "path": "(D) Tool/Add Cube", "operator": "qm.tool", "params": { "tool_name": "builtin.primitive_cube_add" } },
    { "path": "(D) Tool/Add Cylinder", "operator": "qm.tool", "params": { "tool_name": "builtin.primitive_cylinder_add" } },
    { "path": "(D) Tool/Add Sphere", "operator": "qm.tool", "params": { "tool_name": "builtin.primitive_uv_sphere_add" } },
    { "path": "(D) Tool/Add Ico Sphere", "operator": "qm.tool", "params": { "tool_name": "builtin.primitive_ico_sphere_add" } },
    { "path": "(D) Tool/Add Cone", "operator": "qm.tool", "params": { "tool_name": "builtin.primitive_cone_add" } },

    { "path": "(D) Tool/[Separator]" },

    { "path": "(D) Tool/(Q) Shear", "operator": "qm.tool", "params": { "tool_name": "builtin.shear" } },
    { "path": "(D) Tool/(W) Annotate", "operator": "qm.tool", "params": { "tool_name": "builtin.annotate" } },
    { "path": "(D) Tool/(E) Measure", "operator": "qm.tool", "params": { "tool_name": "builtin.measure" } },
    { "path": "(D) Tool/(R) Knife", "operator": "qm.tool", "params": { "tool_name": "builtin.knife" } },
    { "path": "(F) Mode", "operator": "view3d.object_mode_pie_or_toggle" },

    { "path": "(Z) Files/(Q) Export GLTF", "operator": "qm.export", "params": { "mode": "gltf" } },
    { "path": "(Z) Files/(W) Export GLTF Active Collection", "operator": "qm.export", "params": { "mode": "gltf", "batch_mode": "COLLECTION" } },

    { "path": "(Z) Files/[Separator]" },

    { "path": "(Z) Files/(A) Export FBX", "operator": "qm.export", "params": { "mode": "fbx", "batch_mode": "OFF" } },
    { "path": "(Z) Files/(S) Export FBX Collections", "operator": "qm.export", "params": { "mode": "fbx", "batch_mode": "COLLECTION" } },

    { "path": "(Z) Files/[Separator]" },

    { "path": "(Z) Files/(Z) Reimport All Textures", "operator": "qm.reimport_textures" },
    { "path": "(Z) Files/(X) Unpack All Data To Files", "operator": "qm.unpack_all_data_to_files" },
    
    { "path": "(Z) Files/[Separator]" },
    { "path": "(Z) Files/(D) Make LODs", "operator": "qm.make_lods" },
    { "path": "(Z) Files/(R) Rename For Game Engines", "operator": "qm.rename_game" },


    { "path": "[Separator]" },

    { "path": "(C) Select Linked All", "operator": "mesh.select_linked" },
    { "path": "(V) View Selected or Camera", "operator": "qm.view" }
  ]
}